#!/usr/bin/env python3

import os

import ctc
from ctc.cli.cli_utils import cli_alias_utils


ctc_path = os.path.dirname(os.path.dirname(ctc.__path__[0]))
# aliases_script_path = os.path.join(ctc_path, 'scripts/ctc_aliases.sh')
aliases_template_path = './source/cli/useful_aliases_template.md'
aliases_docs_path = './source/cli/useful_aliases.md'

template_content = """

# Useful Aliases

`ctc` makes it simple to perform many tasks from the command line. However, `ctc` can be made even more simple by using shell aliases that reduce the number of required keystrokes that must be typed.

The `ctc` codebase includes an optional set of cli aliases for this purpose. These aliases can be found in [a script](https://github.com/fei-protocol/checkthechain/blob/main/scripts/ctc_aliases.sh) in the repo, but they are also pasted below for convenience.

These aliases make it so you do not need to type the `"ctc"` before a subcommand name. For example, instead of typing `ctc keccak <address>`, you just type `keccak <address>`. Instead of typing `ctc 4byte <query>`, you just type `4byte <query>`. And so on, for many different `ctc` subcommands.

To use these aliases, you need to include them in your shell config file (e.g. `~/.profile`). You can either copy paste the alias commands directly, or you can add a single line: `source <PATH_TO_ALIAS_FILE>`.


## The Aliases File

```bash
{aliases_file_content}
```

"""

# with open(aliases_template_path, 'r') as f:
#     template_content = f.read()
# with open(aliases_script_path, 'r') as f:
#     aliases_script_content = f.read()
aliases_script_content = cli_alias_utils.aliases_content


aliases_docs_content = template_content.replace(
    '{aliases_file_content}', aliases_script_content
)

with open(aliases_docs_path, 'w') as f:
    f.write(aliases_docs_content)
