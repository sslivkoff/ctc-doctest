#!/usr/bin/env python3

import os

import ctc
from ctc.cli.cli_utils import cli_alias_utils


ctc_path = os.path.dirname(os.path.dirname(ctc.__path__[0]))
aliases_template_path = './source/cli/useful_aliases_template.md'
aliases_docs_path = './source/cli/useful_aliases.md'

template_content = """

# Useful Aliases

`ctc` makes it simple to perform many tasks from the command line. However, `ctc` can be made even more simple by using shell aliases that reduce the number of required keystrokes that must be typed. The `ctc` codebase includes an optional set of cli aliases for this purpose.

Such aliases make it so you do not need to type the "ctc" before a subcommand name. For example, instead of typing `ctc keccak <address>`, you just type `keccak <address>`. Instead of typing `ctc 4byte <query>`, you just type `4byte <query>`. And so on, for many different `ctc` subcommands.

The `ctc setup` wizard can add these aliases to your shell configuation.

## The Aliases

These aliases are chosen so as not to conflict with any common CLI tools.

```bash
{aliases_file_content}
```
"""

aliases_script_content = cli_alias_utils.aliases_content
aliases_script_content = '\n'.join(aliases_script_content.split('\n')[5:-5])
aliases_script_content = aliases_script_content


aliases_docs_content = template_content.replace(
    '{aliases_file_content}', aliases_script_content
)

with open(aliases_docs_path, 'w') as f:
    f.write(aliases_docs_content)
